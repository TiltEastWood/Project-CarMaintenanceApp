@page "/register"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using CarMaintenanceApp.Services
@using Microsoft.AspNetCore.Components
@using CarMaintenanceApp.Models
@inject NavigationManager Navigation
@inject AuthServices AuthServices
@inject CarMaintenanceContext ApplicationDbContext


<h3>Register</h3>

<EditForm Model="newUser" OnValidSubmit="HandleValidSubmit" FormName="UserRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstName">First Name</label>
        <InputText id="firstName" class="form-control" @bind-Value="newUser.FirstName" />
        <ValidationMessage For="@(() => newUser.FirstName)" />
    </div>

    <div class="form-group">
        <label for="lastName">Last Name</label>
        <InputText id="lastName" class="form-control" @bind-Value="newUser.LastName" />
        <ValidationMessage For="@(() => newUser.LastName)" />
    </div>

    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-Value="newUser.Username" />
        <ValidationMessage For="@(() => newUser.Username)" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="newUser.Email" />
        <ValidationMessage For="@(() => newUser.Email)" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" @bind-Value="newUser.Password" type="@passwordInputType" />
        <ValidationMessage For="@(() => newUser.Password)" />
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" class="form-control" @bind-Value="newUser.ConfirmPassword" type="@passwordInputType" />
        <ValidationMessage For="@(() => newUser.ConfirmPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private RegisterModel newUser { get; set; } = new();
    private string errorMessage;
    private bool showPassword = false;

    private string passwordInputType => showPassword ? "text" : "password";

    private async Task HandleValidSubmit()
    {
        var result = await AuthServices.RegisterAsync(ApplicationDbContext, newUser);
        if (result)
        {
           Navigation.NavigateTo("/login");
        }
        else 
        {
            errorMessage = "Registration failed. Please try again.";
        }
    }
}
